version: '3.9'

services:
  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  streamlit-dashboard:
    build: ./streamlit_dashboard
    ports:
      - "8501:8501"
    volumes:
      - "./streamlit_dashboard:/usr/src/app"
    environment:
      - API_BASE_URL=${API_BASE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  api_backend:
    build: ./api_backend
    ports:
      - 8000:8000
    volumes:
      - "./api_backend:/usr/src/app"
    restart: always
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE=${DATABASE}
      - DOCKER_POSTGRES_HOST=${DOCKER_POSTGRES_HOST}
      - PORT=${PORT}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - TEST_USERNAME=${TEST_USERNAME}
      - TEST_PASSWORD=${TEST_PASSWORD}
    container_name: api_backend
  
  test_api_backend:
    build: ./api_backend
    volumes:
      - "./api_backend:/usr/src/app"
    restart: always
    environment:
      - WATCHFILES_FORCE_POLLING=true
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE=${DATABASE}
      - DOCKER_POSTGRES_HOST=${DOCKER_POSTGRES_HOST}
      - PORT=${PORT}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - TEST_USERNAME=${TEST_USERNAME}
      - TEST_PASSWORD=${TEST_PASSWORD}

volumes:
  postgres-data:
  pgadmin-data: